//Compute shader for generating a gaussian blur
#version 430
//Image size
#define size_x 1280
#define size_y 720

//Filter coefficiants
float filter[49] = {
    //0.030078323, 0.104983664, 0.222250419, 0.285375187, 0.222250419, 0.104983664, 0.030078323
    0.0009f, 0.003f, 0.006f, 0.008f, 0.006f, 0.003f, 0.0009f,
    0.003f, 0.01f, 0.02f, 0.03f, 0.02f, 0.0f, 0.003f,
    0.006f, 0.02f, 0.04f, 0.06f, 0.04f, 0.02f, 0.006f,
    0.008f, 0.02f, 0.06f, 0.08f, 0.06f, 0.02f, 0.008f,
    0.006f, 0.02f, 0.04f, 0.06f, 0.04f, 0.02f, 0.006f,
    0.003f, 0.01f, 0.02f, 0.03f, 0.02f, 0.01f, 0.003f,
    0.0009f, 0.003f, 0.006f, 0.008f, 0.006f, 0.003f, 0.0009f
};


//Image coming in
layout(rgba32f, binding = 0) uniform image2D SSAOImage;

//Compute shader dispatch layout
layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
void main() {
    ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy) - ivec2(3, 3);
    vec4 col = vec4(0); //Initialize a colour

    int index = 0;

    for(int i = 0; i < 49; i++)
    {
        col += imageLoad(SSAOImage, pixel_coords + ivec2(index, i % 7)) * filter[i];
        if(i % 7 == 0) {
            index++;
        }
    }

    vec4 data = col;
    imageStore(SSAOImage, pixel_coords, data);
}
